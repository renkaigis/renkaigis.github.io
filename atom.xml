<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kai&#39;s Blog</title>
  <subtitle>要有最朴素的生活，与最遥远的梦想。即使明日天寒地冻，路远马亡。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-07-26T14:29:30.988Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>RenKai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Chrome 浏览器设置 XX-Net 的方法（Windows）</title>
    <link href="http://yoursite.com/2017/07/26/Chrome-%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BE%E7%BD%AE-XX-Net-%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%88Windows%EF%BC%89/"/>
    <id>http://yoursite.com/2017/07/26/Chrome-浏览器设置-XX-Net-的方法（Windows）/</id>
    <published>2017-07-26T09:41:42.000Z</published>
    <updated>2017-07-26T14:29:30.988Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p></p><p id="div-border-left-yellow">本文详细介绍如何在一台 Windows 电脑上架设起 Chrome + XX-Net 的上网渠道。XX-Net 对于需要翻墙的用户来说非常方便。尤其是配置了自己的私有 appid 后，浏览外网毫无压力。</p><p></p>
<p><center><img src="连接" alt=""><center><br><a id="more"></a></center></center></p>
<h1 id="下载安装-Chrome-浏览器"><a href="#下载安装-Chrome-浏览器" class="headerlink" title="下载安装 Chrome 浏览器"></a>下载安装 Chrome 浏览器</h1><p>Chrome 下载地址：<a href="https://www.google.cn/intl/zh-CN/chrome/browser/desktop/index.html" target="_blank" rel="external">https://www.google.cn/intl/zh-CN/chrome/browser/desktop/index.html</a></p>
<p>这一步很简单，直接跳过。</p>
<h1 id="获取和运行-XX-Net"><a href="#获取和运行-XX-Net" class="headerlink" title="获取和运行 XX-Net"></a>获取和运行 XX-Net</h1><ul>
<li><p>打开 <a href="https://github.com/XX-net/XX-Net/blob/master/code/default/download.md，选择稳定版下载。" target="_blank" rel="external">https://github.com/XX-net/XX-Net/blob/master/code/default/download.md，选择稳定版下载。</a></p>
</li>
<li><p>下载完毕后解压缩文件夹，运行文件夹中 start.vbs 文件。</p>
</li>
<li>如果弹出管理员权限请求（用户账户控制），请允许。</li>
<li>首次运行可能会弹出防火墙警告，请允许访问。</li>
</ul>
<h1 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h1><h2 id="方法一：简单方法"><a href="#方法一：简单方法" class="headerlink" title="方法一：简单方法"></a>方法一：简单方法</h2><ul>
<li>启动 XX-Net 后，右下角会出现托盘图标。<code>右键单击托盘图标</code>，点击“全局 PAC 智能代理”即可。 </li>
</ul>
<h2 id="方法二：安装和使用代理切换插件"><a href="#方法二：安装和使用代理切换插件" class="headerlink" title="方法二：安装和使用代理切换插件"></a>方法二：安装和使用代理切换插件</h2><ul>
<li><p>打开 XX-Net/SwitchyOmega 文件夹；打开 Chrome 浏览器的扩展程序页面 chrome://extensions 。把 SwitchyOmega.crx 文件拖放到浏览器扩展程序页面安装。如图:</p>
</li>
<li><p>此时。浏览器上方会出现对话框，点击<code>添加扩展程序</code>。</p>
</li>
<li>进入 SwitchOmega 页面，第一次进来，选择<code>跳过教程</code>；</li>
<li><p>点击界面左侧栏的<code>导入/导出</code>，选择<code>从备份文件恢复</code>：</p>
</li>
<li><p>点击从备份文件中恢复后，找到 XX-Net/SwitchyOmega/OmegaOptions.bak 文件，点击打开：</p>
</li>
<li><p>点击左侧栏“情景模式”下的 <code>XX-Net自动切换</code>；</p>
</li>
<li><p>下拉点击<code>立即更新情景模式</code></p>
</li>
<li><p>点击 Chrome 右上角的 SwitchOmega，切换成 “<code>XX-Net自动切换</code>”；</p>
</li>
<li><p>到此，浏览器端设置代理也就完成了，还需最后一步，把 XX-Net 切换为“取消全局代理”，就可以畅游网络了。</p>
</li>
<li><p>但是此时用的是<strong>公共 APPID，因为资源有限，使用上存在限制，建议部署私有 APPID</strong>。</p>
</li>
</ul>
<h1 id="配置个人-APPID"><a href="#配置个人-APPID" class="headerlink" title="配置个人 APPID"></a>配置个人 APPID</h1><h2 id="登录-Google-账户"><a href="#登录-Google-账户" class="headerlink" title="登录 Google 账户"></a>登录 Google 账户</h2><ul>
<li><a href="https://www.google.com/ncr" target="_blank" rel="external">https://www.google.com/ncr</a> (若无帐户，需注册)</li>
</ul>
<h2 id="创建-APPID"><a href="#创建-APPID" class="headerlink" title="创建 APPID"></a>创建 APPID</h2><ul>
<li><ol>
<li>打开<a href="https://console.cloud.google.com/start" target="_blank" rel="external">https://console.cloud.google.com/start</a> ，点击<code>选择项目</code>，然后点击<code>创建项目</code>：</li>
</ol>
</li>
<li><ol>
<li>输入项目名称后，会自动帮你匹配可用ID，然后左击创建(请细读此教程底部说明)</li>
</ol>
</li>
</ul>
<h2 id="设置-APPID-的-App-引擎"><a href="#设置-APPID-的-App-引擎" class="headerlink" title="设置 APPID 的 App 引擎"></a>设置 APPID 的 App 引擎</h2><ul>
<li><ol>
<li>点击激活 <code>Google云端Shell</code>，点击<code>启动云端SHELL</code>进入Shell；</li>
</ol>
</li>
<li><ol>
<li>在页面底部输入 <code>gcloud config set project</code> 项目ID,按下键盘的enter键，然后输入 <code>gcloud beta app create --region us-central</code> ，再按一次enter；</li>
</ol>
</li>
<li><ol>
<li>当底部出现 <code>Success! The app is now created. Please use &#39;gcloud app deploy&#39; to deploy your first app.</code> 时，创建 appid 成功。此时可以重复前面两步，创建更多的 appid；</li>
</ol>
</li>
</ul>
<h2 id="部署服务器端"><a href="#部署服务器端" class="headerlink" title="部署服务器端"></a>部署服务器端</h2><ul>
<li><ol>
<li>打开 XX-Net 的设置页：<a href="http://127.0.0.1:8085" target="_blank" rel="external">http://127.0.0.1:8085</a> ，切换到<code>部署服务端</code>；</li>
</ol>
</li>
<li><ol>
<li>输入AppID（多个APPID中间使用 | 隔开），“Show Debug Log”选择为 <code>On</code> ，点击 <code>开始部署</code> ；</li>
</ol>
</li>
<li><ol>
<li>弹出授权窗口，点击 Allow，然后就会进行服务端的部署；</li>
</ol>
</li>
<li><ol>
<li><code>Debug Log</code> 里面显示如下信息，则说明部署完成；</li>
</ol>
</li>
<li><ol>
<li>部署完成后，切换到 <code>配置</code> ，输入部署好的 APPID 后点击 <code>保存</code>。</li>
</ol>
</li>
<li><ol>
<li>切换到 <code>状态</code> 来确认部署的状态，如果一切正常，那么恭喜你，现在可以流畅的翻墙喽~~~</li>
</ol>
</li>
</ul>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ol>
<li>每个 AppID 每天1G流量，一般每个 Google 帐户最多12个 AppID；</li>
<li>AppID 的数量只影响流量，不影响速度；</li>
<li>若部署过程中始终无法弹出窗口 , 建议使用ss部署服务端；</li>
<li>若部署一直失败，可以安装 Google Cloud SDK，gcloud init设置代理，gcloud app deploy 上传 gae 文件夹，在 app.yaml 中不要指定 application 和 version。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p id=&quot;div-border-left-yellow&quot;&gt;本文详细介绍如何在一台 Windows 电脑上架设起 Chrome + XX-Net 的上网渠道。XX-Net 对于需要翻墙的用户来说非常方便。尤其是配置了自己的私有 appid 后，浏览外网毫无压力。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;连接&quot; alt=&quot;&quot;&gt;&lt;center&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Chrome" scheme="http://yoursite.com/categories/Chrome/"/>
    
    
      <category term="Chrome, XX-Net" scheme="http://yoursite.com/tags/Chrome-XX-Net/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS Engine 地图操作基础——地图文档保存</title>
    <link href="http://yoursite.com/2017/06/13/ArcGIS-Engine-%E5%9C%B0%E5%9B%BE%E6%93%8D%E4%BD%9C%E5%9F%BA%E7%A1%80%E2%80%94%E2%80%94%E5%9C%B0%E5%9B%BE%E6%96%87%E6%A1%A3%E4%BF%9D%E5%AD%98/"/>
    <id>http://yoursite.com/2017/06/13/ArcGIS-Engine-地图操作基础——地图文档保存/</id>
    <published>2017-06-13T13:15:30.000Z</published>
    <updated>2017-06-13T14:27:06.536Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p></p><p id="div-border-top-purple">在对地图文档进行修改后，经常需要对其进行保存。地图文档的保存分为直接保存和另存为两种。这里的保存仅仅只是修改地图文档文件记录的信息，并不会对数据进行更改。保存地图文档的一般格式是 *.mxd 格式。<br><a id="more"></a></p>
<h1 id="地图文档保存"><a href="#地图文档保存" class="headerlink" title="地图文档保存"></a>地图文档保存</h1><p><strong>实例程序实现思路</strong></p>
<ul>
<li>(1) 地图文档的保存主要使用 IMapDocument 接口。首先使用 IMxdContents 接口读取已打开地图文档的内容，并使之替换 IMapDocument 接口的实例对象。</li>
<li>(2) 保存时使用 IMapDocument 接口的 Save 方法，函数原型为 public void Save(bool bUseRelativePaths, bool bCreateThumnbail)</li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>bUseRelativePaths</td>
<td>是否保存为相对路径（区别于绝对路径）</td>
</tr>
<tr>
<td>bCreateThumnbail</td>
<td>表示保存的地图在 ArcCatalog 中查看时是否显示缩略图</td>
</tr>
</tbody>
</table>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//保存地图</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SaveMap_Click</span><span class="params">(object sender, EventArgs e)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">        string sMxdFileName = mainMapControl.DocumentFilename;</div><div class="line">        IMapDocument pMapDocument = <span class="keyword">new</span> MapDocumentClass();</div><div class="line">        <span class="keyword">if</span> (sMxdFileName!=<span class="keyword">null</span> &amp;&amp; mainMapControl.CheckMxFile(sMxdFileName))</div><div class="line">        &#123;     </div><div class="line">            <span class="keyword">if</span> (pMapDocument.get_IsReadOnly(sMxdFileName))</div><div class="line">            &#123;</div><div class="line">                MessageBox.Show(<span class="string">"本地图文档是只读的，不能保存!"</span>);</div><div class="line">                pMapDocument.Close();</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;  </div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            SaveFileDialog pSaveFileDialog = <span class="keyword">new</span> SaveFileDialog();</div><div class="line">            pSaveFileDialog.Title = <span class="string">"请选择保存路径"</span>;</div><div class="line">            pSaveFileDialog.OverwritePrompt = <span class="keyword">true</span>;</div><div class="line">            pSaveFileDialog.Filter = <span class="string">"ArcMap文档（*.mxd）|*.mxd|ArcMap模板（*.mxt）|*.mxt"</span>;</div><div class="line">            pSaveFileDialog.RestoreDirectory = <span class="keyword">true</span>;</div><div class="line">            <span class="keyword">if</span> (pSaveFileDialog.ShowDialog() == DialogResult.OK)</div><div class="line">            &#123;</div><div class="line">                sMxdFileName = pSaveFileDialog.FileName;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">            &#123;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        pMapDocument.New(sMxdFileName);</div><div class="line">        pMapDocument.ReplaceContents(mainMapControl.Map as IMxdContents);</div><div class="line">        pMapDocument.Save(pMapDocument.UsesRelativePaths, <span class="keyword">true</span>);</div><div class="line">        pMapDocument.Close();</div><div class="line">        MessageBox.Show(<span class="string">"保存地图文档成功!"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception ex)</div><div class="line">    &#123;</div><div class="line">        MessageBox.Show(ex.Message);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="地图文档另存为"><a href="#地图文档另存为" class="headerlink" title="地图文档另存为"></a>地图文档另存为</h1><p><strong>实例程序实现思路</strong></p>
<ul>
<li>(1) 地图文档的另存为与保存的方法类似，保存前需判断保存的路径里是否存在相同的文件；</li>
<li>(2) 另存为需要用 IMapDocument 接口的 New 方法创建新的路径。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//地图另存为</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnSaveAsMap_Click</span><span class="params">(object sender, EventArgs e)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">        SaveFileDialog pSaveFileDialog = <span class="keyword">new</span> SaveFileDialog();</div><div class="line">        pSaveFileDialog.Title = <span class="string">"另存为"</span>;</div><div class="line">        pSaveFileDialog.OverwritePrompt = <span class="keyword">true</span>;</div><div class="line">        pSaveFileDialog.Filter = <span class="string">"ArcMap文档（*.mxd）|*.mxd|ArcMap模板（*.mxt）|*.mxt"</span>;</div><div class="line">        pSaveFileDialog.RestoreDirectory = <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">if</span> (pSaveFileDialog.ShowDialog() == DialogResult.OK)</div><div class="line">        &#123;</div><div class="line">            string sFilePath = pSaveFileDialog.FileName;</div><div class="line"></div><div class="line">            IMapDocument pMapDocument = <span class="keyword">new</span> MapDocumentClass();</div><div class="line">            pMapDocument.New(sFilePath);</div><div class="line">            pMapDocument.ReplaceContents(mainMapControl.Map as IMxdContents);</div><div class="line">            pMapDocument.Save(<span class="keyword">true</span>, <span class="keyword">true</span>);</div><div class="line">            pMapDocument.Close();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception ex)</div><div class="line">    &#123;</div><div class="line">        MessageBox.Show(ex.Message);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//也可以使用 ArcGIS Engine 中封装好的类库资源 ControlsSaveAsDocCommandClass 实现地图文档的另存为：</span></div><div class="line">    <span class="comment">//ICommand command = new ControlsSaveAsDocCommandClass();</span></div><div class="line">    <span class="comment">//command.OnCreate(mainMapControl.Object);</span></div><div class="line">    <span class="comment">//command.OnClick();</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p id=&quot;div-border-top-purple&quot;&gt;在对地图文档进行修改后，经常需要对其进行保存。地图文档的保存分为直接保存和另存为两种。这里的保存仅仅只是修改地图文档文件记录的信息，并不会对数据进行更改。保存地图文档的一般格式是 *.mxd 格式。&lt;br&gt;
    
    </summary>
    
      <category term="ArcGIS" scheme="http://yoursite.com/categories/ArcGIS/"/>
    
    
      <category term="ArcGIS" scheme="http://yoursite.com/tags/ArcGIS/"/>
    
      <category term="AE" scheme="http://yoursite.com/tags/AE/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github 搭建个人博客（小白版图文教程）</title>
    <link href="http://yoursite.com/2017/06/09/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%B0%8F%E7%99%BD%E7%89%88%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B%EF%BC%89/"/>
    <id>http://yoursite.com/2017/06/09/Hexo-Github搭建个人博客（小白版图文教程）/</id>
    <published>2017-06-09T15:13:15.000Z</published>
    <updated>2017-06-14T00:33:10.120Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p></p><p id="div-border-left-red">本人技术小白，折腾了两天时间，看遍了网上各种各样杂乱的教程，走了很多弯路，终于成功搭建出来了个人博客。等到结束的那一刻，心里很是开心。回想这一整个步骤，其实并不难，很简单就能掌握。<br>有过经历，才知道好的教程的重要性。因而我将自己的经验分享出来~</p><p></p>
<p><center><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1497031713267&amp;di=5c99dcb83022b7302b8c479e50fa82c4&amp;imgtype=0&amp;src=http%3A%2F%2Fwuchenxu.com%2F2015%2F11%2F04%2FStatic-Blog-hexo-github-1-Start%2Fhexo_github.png" alt=""><center><br><a id="more"></a></center></center></p>
<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>最近兴趣使然，想要搭建一个个人博客。每次看到别人拥有自己的个人主页都特别羡慕，一直想着自己有一个博客该有多好啊。就这样折腾了两天时间，看遍了网上各种各样杂乱的教程，走了很多弯路，终于成功搭建出来了。等到结束的那一刻，心里很是开心。回想这一整个步骤，其实并不难，很简单就能掌握。<br>由于自己是技术小白，很多大神写的教程看了依旧操作错误。多么希望有人能手把手的教你每一步做什么。<br>有过经历，才知道好的教程的重要性。因而我将自己建站的步骤详细记录下来，以供参考。希望后面想要建站的人不要走弯路了哦~</p>
<h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><h2 id="配置-Node-js-环境"><a href="#配置-Node-js-环境" class="headerlink" title="配置 Node.js 环境"></a>配置 Node.js 环境</h2><p>下载 <a href="http://nodejs.cn/download/" target="_blank" rel="external">Node.js</a> 安装文件，根据自己电脑的位数，选择下载32位或者64位的：<a href="http://nodejs.cn/download/" target="_blank" rel="external">http://nodejs.cn/download/</a><br>然后安装下载的文件，保持默认设置就好了，一路点 Next ，很快就安装完成了。<br><img src="http://img.blog.csdn.net/20170609211621557" alt="图1"><br>接着检查一下 Node 是否安装好，打开运行窗口，输入 <code>cmd</code> ，打开命令行：<br><img src="http://img.blog.csdn.net/20170609211843372" alt="图2"></p>
<p>在命令行分别输入以下命令：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">node -v</div><div class="line">npm -v</div></pre></td></tr></table></figure></p>
<p>如果出现下图界面，则说明 node 安装正确。可以进入下一步了。<br><img src="http://img.blog.csdn.net/20170609211856294" alt="图3"></p>
<h2 id="配置-Git-环境"><a href="#配置-Git-环境" class="headerlink" title="配置 Git 环境"></a>配置 Git 环境</h2><p>去官网下载 <a href="https://git-scm.com/downloads" target="_blank" rel="external">Git</a> 安装文件:</p>
<ul>
<li><a href="https://git-scm.com/downloads" target="_blank" rel="external">https://git-scm.com/downloads</a></li>
</ul>
<p>接着进行安装，如下图，在 <code>Windows Explorer integration</code> 这一项及下边的两项都打上勾：<br><img src="http://img.blog.csdn.net/20170609212422267" alt="图4"><br><img src="http://img.blog.csdn.net/20170609212406832" alt="图5"></p>
<p>然后一直 Next 就可以了，安装完成后同样检查一下 Git 是否正确安装。<br><img src="http://img.blog.csdn.net/20170609212433173" alt="图6"></p>
<h2 id="Github账户的注册和代码库的创建"><a href="#Github账户的注册和代码库的创建" class="headerlink" title="Github账户的注册和代码库的创建"></a>Github账户的注册和代码库的创建</h2><p><a href="https://github.com/" target="_blank" rel="external">Github</a>帐号注册，打开链接：<a href="https://github.com/，申请一个" target="_blank" rel="external">https://github.com/，申请一个</a> Github 帐号；<br><img src="http://img.blog.csdn.net/20170609213100732" alt="图7"><br>注册好之后还需要确认邮箱，打开注册的邮箱，确认注册，然后进入下一步；<br>点击页面右上角自己的头像，点击下拉菜单的<code>New repository</code>，创建一个新的代码库：<br><img src="http://img.blog.csdn.net/20170609213209365" alt="图8"><br>代码库的名字最好与你的用户名相同，格式为 <code>yourname.github.io</code> ，比如我的用户名是 <code>renkaitest</code>，那我的代码库名即为 <code>renkaitest.github.io</code><br><img src="http://img.blog.csdn.net/20170609213228765" alt="图9"><br>创建成功后出现下图所示界面，点击右边的复制按钮，复制这个地址：<br><img src="http://img.blog.csdn.net/20170609213240443" alt="图10"></p>
<h2 id="配置-Github-pages"><a href="#配置-Github-pages" class="headerlink" title="配置 Github pages"></a>配置 Github pages</h2><p>随便找一个目录，右击鼠标，选择<code>Git Bash Here</code>，打开一个类似命令行的界面，输入以下代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone https:<span class="comment">//github.com/username/username.github.io</span></div></pre></td></tr></table></figure></p>
<ul>
<li>clone 后面的链接即就是上一步复制的那个链接，比如我的就是下面的代码：</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone https:<span class="comment">//github.com/renkaitest/renkaitest.github.io</span></div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20170609214138416" alt="图11"><br>然后输入 <strong><code>cd 你的代码库名</code></strong> ，例如 <code>cd renkaitest.github.io</code> ，也可以直接进入该目录下的一个名为 <code>renkaitest.github.io</code> 的文件夹。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cd renkaitest.github.io</div></pre></td></tr></table></figure></p>
<ul>
<li>然后输入：</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ echo <span class="string">"Hello World"</span> &gt; index.html</div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20170609214149934" alt="图12"><br>接着输入：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git add --all</div><div class="line">$ git commit -m <span class="string">"Initial commit"</span></div></pre></td></tr></table></figure></p>
<ul>
<li>这里会出现一个错误，是因为我们没有设置Git的 <code>user name</code> 和 <code>email</code> ，此时输入以下代码：</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.email <span class="string">"541638321@qq.com"</span></div><div class="line">$ git config --global user.name <span class="string">"renkaitest"</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>注意：上面的 <code>name</code> 和 <code>email</code> 都要换成自己的邮箱和用户名</strong></li>
<li>此时继续执行以下代码：</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git commit -m <span class="string">"Initial commit"</span></div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20170609214201151" alt="图13"><br>下面 <code>push</code> 到你的代码库，输入代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push -u origin master</div></pre></td></tr></table></figure></p>
<ul>
<li>可能会弹出以下界面让你登录，使用 Github 帐号登录即可。</li>
</ul>
<p><img src="http://img.blog.csdn.net/20170609214215276" alt="图14"><br><img src="http://img.blog.csdn.net/20170609214230716" alt="图15"><br>此时你的 Github Pages 已经配置好了，打开 <code>yourname.github,io</code> 这个网址就能看到你的博客了，yourname 替换成你自己的用户名。<br><img src="http://img.blog.csdn.net/20170609214253558" alt="图16"></p>
<h1 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h1><p>找一个目录，我是在 <code>d:\Hexo</code> 目录下，鼠标右击打开 <code>Git Bash Here</code>，输入：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-cli -g</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170609214325905" alt="图17"><br>可能会看到一个 <strong>WARN</strong>，但是没关系的，进入下一步。<br>输入：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo --save</div></pre></td></tr></table></figure></p>
<ul>
<li>等一段时间，他安装完之后检查一下是否安装成功，输入：</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo -v</div></pre></td></tr></table></figure>
<ul>
<li>看到相关的版本信息则说明安装成功。</li>
</ul>
<h1 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h1><p>初始化 Hexo，首先需要找一个目录，这个目录即就是你的博客的所有文件存放的目录，最好路径不要太深，我选择的是 <code>D:\Hexo\blog</code> 。在这个路径下打开 <code>Git Bash Here</code> ，输入代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170609214343843" alt="图18"><br>然后输入：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm stall</div></pre></td></tr></table></figure></p>
<p>这里 npm 会自动帮你安装你需要的组件。<br>继续输入：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g</div></pre></td></tr></table></figure></p>
<p>生成博客。<br><img src="http://img.blog.csdn.net/20170609214354546" alt="图19"><br>输入：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s</div></pre></td></tr></table></figure></p>
<p>启动服务，会提示以下信息：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INFO  Hexo is running at http:<span class="comment">//localhost:4000/. Press Ctrl+C to stop.</span></div></pre></td></tr></table></figure></p>
<p>在浏览器打开 <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> ，将会看到自己的 hexo 博客：<br><img src="http://img.blog.csdn.net/20170609214409469" alt="图20"></p>
<h1 id="关联-Hexo-与-Github-Page"><a href="#关联-Hexo-与-Github-Page" class="headerlink" title="关联 Hexo 与 Github Page"></a>关联 Hexo 与 Github Page</h1><h2 id="配置Git个人信息"><a href="#配置Git个人信息" class="headerlink" title="配置Git个人信息"></a>配置Git个人信息</h2><p>如果你之前已经配置好git个人信息，请跳过这一个步骤，直接来到步骤2<br>设置Git的user name和email：（如果是第一次的话）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name <span class="string">"renkaitset"</span></div><div class="line">$ git config --global user.email <span class="string">"541638321@qq.com"</span></div></pre></td></tr></table></figure></p>
<p>生成密钥<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C <span class="string">"541638321@qq.com"</span></div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170609214914554" alt="图21"><br>输入代码后一直按回车就好了，不用自己定义目录，生成的 <code>ssh</code> 会存放在 <code>C:\Users\用户名\.ssh</code> 目录下，如果找不到 <code>.ssh</code> 目录，请在文件夹选项中<strong>显示隐藏的项目</strong>。</p>
<h2 id="配置-SSH-密匙"><a href="#配置-SSH-密匙" class="headerlink" title="配置 SSH 密匙"></a>配置 SSH 密匙</h2><p>进入 Github 网页，点击右上角自己的头像，选择 <code>Settings</code> ：<br><img src="http://img.blog.csdn.net/20170609214925186" alt="图22"><br>配置 <code>SSH and GPG keys</code> ，点击 <code>New SSH key</code>：<br><img src="http://img.blog.csdn.net/20170609214937023" alt="图23"><br>用 txt 打开刚才生成的 Key，复制到下图所示区域，点击 <code>Add SSH key</code>：<br><img src="http://img.blog.csdn.net/20170609214946764" alt="图24"></p>
<h2 id="配置-Deployment"><a href="#配置-Deployment" class="headerlink" title="配置 Deployment"></a>配置 Deployment</h2><p>打开博客目录下的<strong>站点配置</strong>文件 <code>_config.yml</code> ，比如我的博客目录是 <code>D:\Hexo\blog</code>，找到该目录下的 <code>_config.yml</code>。打开他，在最末尾找到 <code>Deployment</code> ，然后按照如下修改：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git<span class="meta">@github</span>.com:yourname/yourname.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>上面的 <code>yourname</code> 都要替换成自己的用户名，以我的为例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git<span class="meta">@github</span>.com:renkaitest/renkaitest.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>这样就配置好了，接下来就可以写博客了。</p>
<h1 id="发布博文"><a href="#发布博文" class="headerlink" title="发布博文"></a>发布博文</h1><p>新建一篇博文，在博客存放的目录里面 <code>Git Bash Here</code> ，执行命令：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo <span class="keyword">new</span> post <span class="string">"我的第一篇博文"</span></div></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20170609214957601" alt="图25"><br>然后就会在电脑的目录下 <code>D:\Hexo\blog\source\_posts</code> 看到一个 <code>我的第一篇博文.md</code> 文件，使用 MarkDown 编辑这篇文章就可以了。<br>文章编辑好后，运行生成、部署命令。<br>但是此时还缺少一个扩展，因而不能部署，先要执行以下命令：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>如果没有执行这个命令，将会提醒：</p>
<blockquote>
<p>deloyer not found:git</p>
</blockquote>
<p>现在开始执行：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo g   <span class="comment">// 生成</span></div><div class="line">$ hexo d   <span class="comment">// 部署</span></div></pre></td></tr></table></figure></p>
<p>也可以将这两个命令一起执行：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo d -g    <span class="comment">//在部署前先生成</span></div></pre></td></tr></table></figure></p>
<p>若出现如下图所示的信息 <code>INFO  Deploy done: git</code> ，则表示部署成功，已经上传到你的代码库。<br><img src="http://img.blog.csdn.net/20170609215015570" alt="图26"><br>此时访问你的地址 <a href="https://yourname.github.io" target="_blank" rel="external">https://yourname.github.io</a> ，将会看到刚才写的文章了。<br><img src="http://img.blog.csdn.net/20170609215025796" alt="图27"><br><strong>注：我的主题是自己换过的，可能与你的显示结果有所不同，做到这一步，你已经成功搭建了自己的博客。已经大功告成了！恭喜你~</strong></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>以后发布博文，就是以下的步骤：</p>
<ul>
<li><p>写博文：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo <span class="keyword">new</span> post <span class="string">"博文名字"</span></div></pre></td></tr></table></figure>
</li>
<li><p>生成博文：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g</div></pre></td></tr></table></figure>
</li>
<li><p>部署博文：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo d</div></pre></td></tr></table></figure>
</li>
<li><p>由于网络原因，进入你的网页可能不会立即显示最新的信息。过几分钟就好了~</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p id=&quot;div-border-left-red&quot;&gt;本人技术小白，折腾了两天时间，看遍了网上各种各样杂乱的教程，走了很多弯路，终于成功搭建出来了个人博客。等到结束的那一刻，心里很是开心。回想这一整个步骤，其实并不难，很简单就能掌握。&lt;br&gt;有过经历，才知道好的教程的重要性。因而我将自己的经验分享出来~&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1497031713267&amp;amp;di=5c99dcb83022b7302b8c479e50fa82c4&amp;amp;imgtype=0&amp;amp;src=http%3A%2F%2Fwuchenxu.com%2F2015%2F11%2F04%2FStatic-Blog-hexo-github-1-Start%2Fhexo_github.png&quot; alt=&quot;&quot;&gt;&lt;center&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Hexo+Github" scheme="http://yoursite.com/categories/Hexo-Github/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS Engine 地图操作基础——数据加载</title>
    <link href="http://yoursite.com/2017/06/05/ArcGIS-Engine-%E5%9C%B0%E5%9B%BE%E6%93%8D%E4%BD%9C%E5%9F%BA%E7%A1%80%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%8A%A0%E8%BD%BD/"/>
    <id>http://yoursite.com/2017/06/05/ArcGIS-Engine-地图操作基础——数据加载/</id>
    <published>2017-06-05T04:47:44.000Z</published>
    <updated>2017-06-13T14:27:20.221Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p></p><p id="div-border-top-green">数据加载是 ArcGIS Engine 中最基础的操作，AE 支持的数据广泛，包含矢量数据、栅格数据、CAD 数据、Excel数据等等，这些数据的加载有助于我们使用 AE 做进一步的数据处理与分析。<br><a id="more"></a></p>
<h1 id="加载地图文档"><a href="#加载地图文档" class="headerlink" title="加载地图文档"></a>加载地图文档</h1><p>地图文档可以是一个ArcMap文档（*.mxd）或者ArcMap模版（*.mxt）或ArcReader文件（*.pmf）。</p>
<p><strong>加载地图文档的方式有三种：</strong></p>
<ul>
<li><ol>
<li>使用 IMapControl 接口的 LoadMxFile 方法加载；</li>
</ol>
</li>
<li><ol>
<li>通过 IMapDocument 接口加载;</li>
</ol>
</li>
<li><ol>
<li>使用 ArcGIS Engine 中封装好的类库资源 ControlsOpenDocCommandClass 加载。</li>
</ol>
</li>
</ul>
<h2 id="LoadMxFile-方法加载地图文档文件"><a href="#LoadMxFile-方法加载地图文档文件" class="headerlink" title="LoadMxFile 方法加载地图文档文件"></a>LoadMxFile 方法加载地图文档文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">BtnLoadMxFile_Click</span><span class="params">(object sender, EventArgs e)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">//加载数据前如果有数据则清空</span></div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">        OpenFileDialog pOpenFileDialog = <span class="keyword">new</span> OpenFileDialog();</div><div class="line">        pOpenFileDialog.CheckFileExists = <span class="keyword">true</span>;</div><div class="line">        pOpenFileDialog.Title = <span class="string">"打开地图文档"</span>;</div><div class="line">        pOpenFileDialog.Filter = <span class="string">"ArcMap文档(*.mxd)|*.mxd;|ArcMap模板(*.mxt)|*.mxt|发布地图文件(*.pmf)|*.pmf|所有地图格式(*.mxd;*.mxt;*.pmf)|*.mxd;*.mxt;*.pmf"</span>;</div><div class="line">        pOpenFileDialog.Multiselect = <span class="keyword">false</span>;   <span class="comment">//不允许多个文件同时选择</span></div><div class="line">        pOpenFileDialog.RestoreDirectory = <span class="keyword">true</span>;   <span class="comment">//存储打开的文件路径</span></div><div class="line">        <span class="keyword">if</span> (pOpenFileDialog.ShowDialog() == DialogResult.OK)</div><div class="line">        &#123;</div><div class="line">            string pFileName = pOpenFileDialog.FileName;</div><div class="line">            <span class="keyword">if</span> (pFileName == <span class="string">""</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (mainMapControl.CheckMxFile(pFileName)) <span class="comment">//检查地图文档有效性</span></div><div class="line">            &#123;</div><div class="line">                ClearAllData();</div><div class="line">                mainMapControl.LoadMxFile(pFileName);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">            &#123;</div><div class="line">                MessageBox.Show(pFileName + <span class="string">"是无效的地图文档!"</span>, <span class="string">"信息提示"</span>);</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception ex)</div><div class="line">    &#123;</div><div class="line">        MessageBox.Show(<span class="string">"打开地图文档失败"</span> + ex.Message);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>关于 ClearAllData 函数:</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ClearAllData</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (mainMapControl.Map != <span class="keyword">null</span> &amp;&amp; mainMapControl.Map.LayerCount &gt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="comment">//新建mainMapControl中Map</span></div><div class="line">        IMap dataMap = <span class="keyword">new</span> MapClass();</div><div class="line">        dataMap.Name = <span class="string">"Map"</span>;</div><div class="line">        mainMapControl.DocumentFilename = string.Empty;</div><div class="line">        mainMapControl.Map = dataMap;</div><div class="line"></div><div class="line">        <span class="comment">//新建EagleEyeMapControl中Map</span></div><div class="line">        IMap eagleEyeMap = <span class="keyword">new</span> MapClass();</div><div class="line">        eagleEyeMap.Name = <span class="string">"eagleEyeMap"</span>;</div><div class="line">        EagleEyeMapControl.DocumentFilename = string.Empty;</div><div class="line">        EagleEyeMapControl.Map = eagleEyeMap;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="IMapDocument-方法加载-Mxd-文档文件"><a href="#IMapDocument-方法加载-Mxd-文档文件" class="headerlink" title="IMapDocument 方法加载 Mxd 文档文件"></a>IMapDocument 方法加载 Mxd 文档文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">BtnIMapDocument_Click</span><span class="params">(object sender, EventArgs e)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">        OpenFileDialog pOpenFileDialog = <span class="keyword">new</span> OpenFileDialog();</div><div class="line">        pOpenFileDialog.CheckFileExists = <span class="keyword">true</span>;</div><div class="line">        pOpenFileDialog.Title = <span class="string">"打开地图文档"</span>;</div><div class="line">        pOpenFileDialog.Filter = <span class="string">"ArcMap文档(*.mxd)|*.mxd;|ArcMap模板(*.mxt)|*.mxt|发布地图文件(*.pmf)|*.pmf|所有地图格式(*.mxd;*.mxt;*.pmf)|*.mxd;*.mxt;*.pmf"</span>;</div><div class="line">        pOpenFileDialog.Multiselect = <span class="keyword">false</span>;</div><div class="line">        pOpenFileDialog.RestoreDirectory = <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">if</span> (pOpenFileDialog.ShowDialog() == DialogResult.OK)</div><div class="line">        &#123;</div><div class="line">            string pFileName = pOpenFileDialog.FileName;</div><div class="line">            <span class="keyword">if</span> (pFileName == <span class="string">""</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (mainMapControl.CheckMxFile(pFileName)) <span class="comment">//检查地图文档有效性</span></div><div class="line">            &#123;</div><div class="line">                <span class="comment">//将数据载入pMapDocument并与Map控件关联</span></div><div class="line">                IMapDocument pMapDocument = <span class="keyword">new</span> MapDocument();<span class="comment">//using ESRI.ArcGIS.Carto;</span></div><div class="line">                pMapDocument.Open(pFileName, <span class="string">""</span>);</div><div class="line">                <span class="comment">//获取Map中激活的地图文档</span></div><div class="line">                mainMapControl.Map = pMapDocument.ActiveView.FocusMap;</div><div class="line">                mainMapControl.ActiveView.Refresh();</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">            &#123;</div><div class="line">                MessageBox.Show(pFileName + <span class="string">"是无效的地图文档!"</span>, <span class="string">"信息提示"</span>);</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception ex)</div><div class="line">    &#123;</div><div class="line">        MessageBox.Show(<span class="string">"打开地图文档失败"</span> + ex.Message);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="ControlsOpenDocCommandClass-加载地图"><a href="#ControlsOpenDocCommandClass-加载地图" class="headerlink" title="ControlsOpenDocCommandClass 加载地图"></a>ControlsOpenDocCommandClass 加载地图</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">BtncontrolsOpenDocCommandClass_Click</span><span class="params">(object sender, EventArgs e)</span></span></div><div class="line">&#123;</div><div class="line">    ICommand command = <span class="keyword">new</span> ControlsOpenDocCommandClass();</div><div class="line">    command.OnCreate(mainMapControl.Object);</div><div class="line">    command.OnClick();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="加载-Shapefile-数据"><a href="#加载-Shapefile-数据" class="headerlink" title="加载 Shapefile 数据"></a>加载 Shapefile 数据</h1><p>加载 Shapefile 数据的方式有两种：</p>
<ul>
<li><ol>
<li>通过工作空间加载；</li>
</ol>
</li>
<li><ol>
<li>通过 MapControl 空间的 AddShapefile 方法加载</li>
</ol>
</li>
</ul>
<h2 id="通过工作空间加载"><a href="#通过工作空间加载" class="headerlink" title="通过工作空间加载"></a>通过工作空间加载</h2><p><strong>实例程序实现思路：</strong></p>
<ul>
<li>(1) 创建 ShapefileWorkspaceFactory 实例 pWorkspaceFactory ，使用 IWorkspaceFactory 接口的 OpenFromFile 方法打开 pFeatureWorkspace 中存储的基于 Shapefile 的工作区。</li>
<li>(2) 创建 FeatureLayer 的实例 pFeatureLayer ，并定义数据集。</li>
<li>(3) 使用 IMap 接口的 AddLayer 方法加载 pFeatureLayer 到当前地图。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddShp_Click</span><span class="params">(object sender, EventArgs e)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">//ClearAllData();</span></div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">        OpenFileDialog pOpenFileDialog = <span class="keyword">new</span> OpenFileDialog();</div><div class="line">        pOpenFileDialog.CheckFileExists = <span class="keyword">true</span>;</div><div class="line">        pOpenFileDialog.Title = <span class="string">"打开Shape文件"</span>;</div><div class="line">        pOpenFileDialog.Filter = <span class="string">"Shape文件（*.shp）|*.shp"</span>;</div><div class="line">        pOpenFileDialog.ShowDialog();</div><div class="line"></div><div class="line">        <span class="comment">////获取文件路径,此即为第二种方法</span></div><div class="line">        <span class="comment">//FileInfo pFileInfo = new FileInfo(pOpenFileDialog.FileName);</span></div><div class="line">        <span class="comment">//string pPath = pOpenFileDialog.FileName.Substring(0, pOpenFileDialog.FileName.Length - pFileInfo.Name.Length);</span></div><div class="line">        <span class="comment">//mainMapControl.AddShapeFile(pPath, pFileInfo.Name);</span></div><div class="line"></div><div class="line">        <span class="comment">// 获取文件路径</span></div><div class="line">        IWorkspaceFactory pWorkspaceFactory;</div><div class="line">        IFeatureWorkspace pFeatureWorkspace;</div><div class="line">        IFeatureLayer pFeatureLayer;</div><div class="line"></div><div class="line">        string pFullPath = pOpenFileDialog.FileName;</div><div class="line">        <span class="keyword">if</span> (pFullPath == <span class="string">""</span>)</div><div class="line">            <span class="keyword">return</span>;</div><div class="line"></div><div class="line">        <span class="keyword">int</span> pIndex = pFullPath.LastIndexOf(<span class="string">"\\"</span>);</div><div class="line">        <span class="comment">//lastIndexOf是从字符串末尾开始检索，检索到子字符，则返回子字符在字符串中的位置，（位置从前向后数，最小位为0，也就是从第0位开始算起）未检测到则返回-1。</span></div><div class="line">        string pFilePath = pFullPath.Substring(<span class="number">0</span>, pIndex); <span class="comment">//文件路径</span></div><div class="line">        string pFileName = pFullPath.Substring(pIndex + <span class="number">1</span>); <span class="comment">//文件名</span></div><div class="line">        <span class="comment">/*substring(参数)是java中截取字符串的一个方法</span></div><div class="line">        有两种传参方式</div><div class="line">        一种是 public String substring(int beginIndex)</div><div class="line">        返回一个新的字符串，它是此字符串的一个子字符串。该子字符串从指定索引处的字符开始，直到此字符串末尾。</div><div class="line">        另一种是 public String substring(int beginIndex, int endIndex)</div><div class="line">        返回一个新字符串，它是此字符串的一个子字符串。该子字符串从指定的 beginIndex 处开始，直到索引 endIndex - 1 处的字符。因此，该子字符串的长度为 endIndex-beginIndex。 */</div><div class="line"></div><div class="line">        <span class="comment">//实例化ShapefileWorkspaceFactory工作空间，打开Shape文件</span></div><div class="line">        pWorkspaceFactory = <span class="keyword">new</span> ShapefileWorkspaceFactory();</div><div class="line">        pFeatureWorkspace = (IFeatureWorkspace)pWorkspaceFactory.OpenFromFile(pFilePath, <span class="number">0</span>);</div><div class="line">        <span class="comment">//创建并实例化要素集</span></div><div class="line">        IFeatureClass pFeatureClass = pFeatureWorkspace.OpenFeatureClass(pFileName);</div><div class="line">        pFeatureLayer = <span class="keyword">new</span> FeatureLayer();</div><div class="line">        pFeatureLayer.FeatureClass = pFeatureClass;</div><div class="line">        pFeatureLayer.Name = pFeatureLayer.FeatureClass.AliasName;<span class="comment">//获取别名</span></div><div class="line"></div><div class="line">        ClearAllData();    <span class="comment">//新增删除数据</span></div><div class="line"></div><div class="line">        mainMapControl.Map.AddLayer(pFeatureLayer);<span class="comment">//加载图层</span></div><div class="line">        mainMapControl.ActiveView.Refresh();</div><div class="line">        <span class="comment">//同步鹰眼.可有可无</span></div><div class="line">        SynchronizeEagleEye();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception ex)</div><div class="line">    &#123;</div><div class="line">        MessageBox.Show(<span class="string">"图层加载失败！"</span> + ex.Message);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="通过-MapControl-空间的-AddShapefile-方法加载"><a href="#通过-MapControl-空间的-AddShapefile-方法加载" class="headerlink" title="通过 MapControl 空间的 AddShapefile 方法加载"></a>通过 MapControl 空间的 AddShapefile 方法加载</h2><blockquote>
<p>调用该方法需要传入两个参数，分别是文件路径和不带扩展名的文件名。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddShp2_Click</span><span class="params">(object sender, EventArgs e)</span></span></div><div class="line">&#123;</div><div class="line">    OpenFileDialog pOpenFileDialog = <span class="keyword">new</span> OpenFileDialog();</div><div class="line">    pOpenFileDialog.CheckFileExists = <span class="keyword">true</span>;</div><div class="line">    pOpenFileDialog.Title = <span class="string">"打开Shape文件"</span>;</div><div class="line">    pOpenFileDialog.Filter = <span class="string">"Shape文件（*.shp）|*.shp"</span>;</div><div class="line">    pOpenFileDialog.ShowDialog();</div><div class="line"></div><div class="line">    <span class="comment">//获取文件路径</span></div><div class="line">    FileInfo pFileInfo = <span class="keyword">new</span> FileInfo(pOpenFileDialog.FileName);<span class="comment">//FileInfo需要using system.IO</span></div><div class="line">    string pPath = pOpenFileDialog.FileName.Substring(<span class="number">0</span>, pOpenFileDialog.FileName.Length - pFileInfo.Name.Length);</div><div class="line">    mainMapControl.AddShapeFile(pPath, pFileInfo.Name);</div><div class="line">    <span class="comment">// 调用该方法需要传入两个参数，分别是文件路径和不带扩展名的文件名。</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="加载栅格数据"><a href="#加载栅格数据" class="headerlink" title="加载栅格数据"></a>加载栅格数据</h1><p><strong>实例程序实现思路：</strong></p>
<p>在加载栅格文件时，需引用 ESRI.ArcGIS.DataSourcesRaster 命名空间。</p>
<ul>
<li>(1) 用 IWorkspaceFactory 接口的 OpenFromFile 方法获得栅格文件的工作区； </li>
<li>(2) 用 IRasterWorkspace 接口的 OpenRasterDataset 方法获得栅格文件的数据集，实例化栅格文件对象，并对栅格数据集是否具有金字塔进行判断（这里栅格文件如果不具有金字塔则创建金字塔，可以提高大数据量图像的显示效率）；</li>
<li>(3) 创建 RasterLayer 类的实例 pRasterLayer ，并定义其数据集；</li>
<li>(4) 使用 MapControl 控件的 AllLayer 方法将 pRasterLayer 添加至当前地图。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddRaster_Click</span><span class="params">(object sender, EventArgs e)</span></span></div><div class="line">&#123;</div><div class="line">    OpenFileDialog pOpenFileDialog = <span class="keyword">new</span> OpenFileDialog();</div><div class="line">    pOpenFileDialog.CheckFileExists = <span class="keyword">true</span>;</div><div class="line">    pOpenFileDialog.Title = <span class="string">"打开Raster文件"</span>;</div><div class="line">    pOpenFileDialog.Filter = <span class="string">"栅格文件 (*.*)|*.bmp;*.tif;*.jpg;*.img|(*.bmp)|*.bmp|(*.tif)|*.tif|(*.jpg)|*.jpg|(*.img)|*.img"</span>;</div><div class="line">    pOpenFileDialog.ShowDialog();</div><div class="line"></div><div class="line">    string pRasterFileName = pOpenFileDialog.FileName;</div><div class="line">    <span class="keyword">if</span> (pRasterFileName == <span class="string">""</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    string pPath = System.IO.Path.GetDirectoryName(pRasterFileName);</div><div class="line">    string pFileName = System.IO.Path.GetFileName(pRasterFileName);</div><div class="line"></div><div class="line">    IWorkspaceFactory pWorkspaceFactory = <span class="keyword">new</span> RasterWorkspaceFactory();</div><div class="line">    IWorkspace pWorkspace = pWorkspaceFactory.OpenFromFile(pPath, <span class="number">0</span>);</div><div class="line">    IRasterWorkspace pRasterWorkspace = pWorkspace as IRasterWorkspace;</div><div class="line">    IRasterDataset pRasterDataset = pRasterWorkspace.OpenRasterDataset(pFileName);</div><div class="line">    <span class="comment">//影像金字塔判断与创建</span></div><div class="line">    IRasterPyramid3 pRasPyrmid;</div><div class="line">    pRasPyrmid = pRasterDataset as IRasterPyramid3;</div><div class="line">    <span class="keyword">if</span> (pRasPyrmid != <span class="keyword">null</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (!(pRasPyrmid.Present))</div><div class="line">        &#123;</div><div class="line">            pRasPyrmid.Create(); <span class="comment">//创建金字塔</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    IRaster pRaster;</div><div class="line">    pRaster = pRasterDataset.CreateDefaultRaster();</div><div class="line">    IRasterLayer pRasterLayer;</div><div class="line">    pRasterLayer = <span class="keyword">new</span> RasterLayerClass();</div><div class="line">    pRasterLayer.CreateFromRaster(pRaster);</div><div class="line">    mainMapControl.Map.AddLayer(pLayer);<span class="comment">//加载shp文件时是这样弄得，经过尝试这样也是可以的，具体有什么区别不可知</span></div><div class="line">    <span class="comment">//mainMapControl.AddLayer(pLayer, 0);//这是书上的源代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="加载-CAD-数据"><a href="#加载-CAD-数据" class="headerlink" title="加载 CAD 数据"></a>加载 CAD 数据</h1><p>对于 ArcGIS Engine 来说，有两种不同的方式使用 CAD 数据：① 作为要素图层，以矢量数据来使用；② 作为地图背景，以栅格数据来使用。对于前者， ArcGIS Engine 使用与 FeatureLayer 一样的方法来管理，对于后者则采用 CadLayer 对象来管理。</p>
<h2 id="CAD-文件作为矢量图层加载"><a href="#CAD-文件作为矢量图层加载" class="headerlink" title="CAD 文件作为矢量图层加载"></a>CAD 文件作为矢量图层加载</h2><h3 id="分图层加载"><a href="#分图层加载" class="headerlink" title="分图层加载"></a>分图层加载</h3><p><strong>实例程序实现思路：</strong></p>
<ul>
<li>(1) CAD 图可以分为点、线、面、标注，它们可以分别被加载到 MapControl 中。与加载其他数据一样，首先定义一个工作空间，用 CadWorkspaceFactoryClass 实例化工作空间，并打开相应的工作空间； </li>
<li>(2) 创建 FeatureLayer 的实例，定义数据集，使用 IMap 接口的 AddLayer 方法将要素图层添加至当前地图。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddCADByLayer_Click</span><span class="params">(object sender, EventArgs e)</span></span></div><div class="line">&#123;</div><div class="line">    IWorkspaceFactory pWorkspaceFactory;</div><div class="line">    IFeatureWorkspace pFeatureWorkspace;</div><div class="line">    IFeatureLayer pFeatureLayer;</div><div class="line">    IFeatureClass pFeatureClass;</div><div class="line"></div><div class="line">    OpenFileDialog pOpenFileDialog = <span class="keyword">new</span> OpenFileDialog();</div><div class="line">    pOpenFileDialog.Filter = <span class="string">"CAD(*.dwg)|*.dwg"</span>;</div><div class="line">    pOpenFileDialog.Title = <span class="string">"打开CAD数据文件"</span>;</div><div class="line">    pOpenFileDialog.ShowDialog();</div><div class="line"></div><div class="line">    string pFullPath = pOpenFileDialog.FileName;</div><div class="line">    <span class="keyword">if</span> (pFullPath == <span class="string">""</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//获取文件名和文件路径</span></div><div class="line">    <span class="keyword">int</span> pIndex = pFullPath.LastIndexOf(<span class="string">"\\"</span>);</div><div class="line">    string pFilePath = pFullPath.Substring(<span class="number">0</span>, pIndex);</div><div class="line">    string pFileName = pFullPath.Substring(pIndex + <span class="number">1</span>);</div><div class="line"></div><div class="line">    pWorkspaceFactory = <span class="keyword">new</span> CadWorkspaceFactory();</div><div class="line">    pFeatureWorkspace = (IFeatureWorkspace)pWorkspaceFactory.OpenFromFile(pFilePath, <span class="number">0</span>);</div><div class="line">    <span class="comment">//加载CAD文件中的线文件</span></div><div class="line">    pFeatureClass = pFeatureWorkspace.OpenFeatureClass(pFileName + <span class="string">":polyline"</span>);</div><div class="line">    <span class="comment">//pFeatureClass = pFeatureWorkspace.OpenFeatureClass(pFileName + ":polygon");//打开多边形</span></div><div class="line">    <span class="comment">//pFeatureClass = pFeatureWorkspace.OpenFeatureClass(pFileName + ":point");//打开点</span></div><div class="line">    <span class="comment">//pFeatureClass = pFeatureWorkspace.OpenFeatureClass(pFileName + ":multipatch");//打开多面体</span></div><div class="line">    <span class="comment">//pFeatureClass = pFeatureWorkspace.OpenFeatureClass(pFileName + ":annotation");//打开标注是这样吗？自己尝试失败，打开的是点，什么鬼？搞不懂。。。</span></div><div class="line">    pFeatureLayer = <span class="keyword">new</span> FeatureLayerClass();</div><div class="line">    pFeatureLayer.Name = pFileName;</div><div class="line">    pFeatureLayer.FeatureClass = pFeatureClass;</div><div class="line"></div><div class="line">    ClearAllData();    <span class="comment">//新增删除数据</span></div><div class="line"></div><div class="line">    mainMapControl.Map.AddLayer(pFeatureLayer);</div><div class="line">    mainMapControl.ActiveView.Refresh();</div><div class="line">    <span class="comment">//同步鹰眼，可有可无</span></div><div class="line">    SynchronizeEagleEye();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="整幅图加载"><a href="#整幅图加载" class="headerlink" title="整幅图加载"></a>整幅图加载</h3><p><strong>实例程序实现思路：</strong></p>
<ul>
<li>将 CAD 作为整幅图加载时，在得到相应的工作空间之后对 CAD 文件中的要素进行遍历，并判断是否为注记图层，如果是注记则需要使用 CadAnnotationLayer 对象。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddWholeCAD_Click</span><span class="params">(object sender, EventArgs e)</span></span></div><div class="line">&#123;</div><div class="line">    IWorkspaceFactory pWorkspaceFactory;</div><div class="line">    IFeatureWorkspace pFeatureWorkspace;</div><div class="line">    IFeatureLayer pFeatureLayer;</div><div class="line">    IFeatureDataset pFeatureDataset;</div><div class="line"></div><div class="line">    OpenFileDialog pOpenFileDialog = <span class="keyword">new</span> OpenFileDialog();</div><div class="line">    pOpenFileDialog.Filter = <span class="string">"CAD(*.dwg)|*.dwg"</span>;</div><div class="line">    pOpenFileDialog.Title = <span class="string">"打开CAD数据文件"</span>;</div><div class="line">    pOpenFileDialog.ShowDialog();</div><div class="line"></div><div class="line">    string pFullPath = pOpenFileDialog.FileName;</div><div class="line">    <span class="keyword">if</span> (pFullPath == <span class="string">""</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//获取文件名和文件路径</span></div><div class="line">    <span class="keyword">int</span> pIndex = pFullPath.LastIndexOf(<span class="string">"\\"</span>);</div><div class="line">    string pFilePath = pFullPath.Substring(<span class="number">0</span>, pIndex);</div><div class="line">    string pFileName = pFullPath.Substring(pIndex + <span class="number">1</span>);</div><div class="line">    <span class="comment">//打开CAD数据集</span></div><div class="line">    pWorkspaceFactory = <span class="keyword">new</span> CadWorkspaceFactoryClass(); <span class="comment">//using ESRI.ArcGIS.DataSourcesFile;</span></div><div class="line">    pFeatureWorkspace = (IFeatureWorkspace)pWorkspaceFactory.OpenFromFile(pFilePath, <span class="number">0</span>);</div><div class="line">    <span class="comment">//打开一个要素集</span></div><div class="line">    pFeatureDataset = pFeatureWorkspace.OpenFeatureDataset(pFileName);</div><div class="line">    <span class="comment">//IFeatureClassContainer可以管理IFeatureDataset中的每个要素类</span></div><div class="line">    IFeatureClassContainer pFeatClassContainer = (IFeatureClassContainer)pFeatureDataset;</div><div class="line"></div><div class="line">    ClearAllData();    <span class="comment">//新增删除数据</span></div><div class="line"></div><div class="line">    <span class="comment">//对CAD文件中的要素进行遍历处理</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pFeatClassContainer.ClassCount; i++)</div><div class="line">    &#123;</div><div class="line">        IFeatureClass pFeatClass = pFeatClassContainer.get_Class(i);</div><div class="line">        <span class="comment">//如果是注记，则添加注记层</span></div><div class="line">        <span class="keyword">if</span> (pFeatClass.FeatureType == esriFeatureType.esriFTCoverageAnnotation)</div><div class="line">        &#123;</div><div class="line">            pFeatureLayer = <span class="keyword">new</span> CadAnnotationLayerClass();</div><div class="line">            pFeatureLayer.Name = pFeatClass.AliasName;</div><div class="line">            pFeatureLayer.FeatureClass = pFeatClass;</div><div class="line">            mainMapControl.Map.AddLayer(pFeatureLayer);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="comment">//如果是点、线、面则添加要素层</span></div><div class="line">        &#123;</div><div class="line">            pFeatureLayer = <span class="keyword">new</span> FeatureLayerClass();</div><div class="line">            pFeatureLayer.Name = pFeatClass.AliasName;</div><div class="line">            pFeatureLayer.FeatureClass = pFeatClass;</div><div class="line">            mainMapControl.Map.AddLayer(pFeatureLayer);</div><div class="line">        &#125;</div><div class="line">        mainMapControl.ActiveView.Refresh();</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//同步鹰眼，可有可无</span></div><div class="line">    SynchronizeEagleEye();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="CAD-文件作为栅格图层加载"><a href="#CAD-文件作为栅格图层加载" class="headerlink" title="CAD 文件作为栅格图层加载"></a>CAD 文件作为栅格图层加载</h2><p><strong>实例程序实现思路：</strong></p>
<ul>
<li>(1) 用 IWorkspaceFactory 接口的 OpenFromFile 方法获得 CAD 文件的工作区； </li>
<li>(2) 用 ICadDrawingWorkspace 接口的 OpenCadDrawingDataset 方法获得 CAD 文件的数据集，并将其赋值给 CadLayerClass 类的实例对象 pCadLayer 的 CadDrawingDataset 属性；</li>
<li>(3) 使用 IMap 接口的 AddLayer 方法将 pCadLayer 添加至当前地图。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddRasterByCAD_Click</span><span class="params">(object sender, EventArgs e)</span></span></div><div class="line">&#123;</div><div class="line">    IWorkspaceFactory pCadWorkspaceFactory;</div><div class="line">    IWorkspace pWorkspace;</div><div class="line">    ICadDrawingWorkspace pCadDrawingWorkspace;</div><div class="line">    ICadDrawingDataset pCadDrawingDataset;</div><div class="line">    ICadLayer pCadLayer;</div><div class="line"></div><div class="line">    OpenFileDialog pOpenFileDialog = <span class="keyword">new</span> OpenFileDialog();</div><div class="line">    pOpenFileDialog.Filter = <span class="string">"CAD(*.dwg)|*.dwg"</span>;</div><div class="line">    pOpenFileDialog.Title = <span class="string">"打开CAD数据文件"</span>;</div><div class="line">    pOpenFileDialog.ShowDialog();</div><div class="line"></div><div class="line">    string pFullPath = pOpenFileDialog.FileName;</div><div class="line">    <span class="keyword">if</span> (pFullPath == <span class="string">""</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//获取文件名和文件路径</span></div><div class="line">    <span class="keyword">int</span> pIndex = pFullPath.LastIndexOf(<span class="string">"\\"</span>);</div><div class="line">    string pFilePath = pFullPath.Substring(<span class="number">0</span>, pIndex);</div><div class="line">    string pFileName = pFullPath.Substring(pIndex + <span class="number">1</span>);</div><div class="line">    pCadWorkspaceFactory = <span class="keyword">new</span> CadWorkspaceFactoryClass();</div><div class="line"></div><div class="line">    pWorkspace = pCadWorkspaceFactory.OpenFromFile(pFilePath, <span class="number">0</span>);</div><div class="line">    pCadDrawingWorkspace = (ICadDrawingWorkspace)pWorkspace;</div><div class="line">    <span class="comment">//获得CAD文件的数据集</span></div><div class="line">    pCadDrawingDataset = pCadDrawingWorkspace.OpenCadDrawingDataset(pFileName);</div><div class="line">    pCadLayer = <span class="keyword">new</span> CadLayerClass();</div><div class="line">    pCadLayer.CadDrawingDataset = pCadDrawingDataset;</div><div class="line">    pCadLayer.Name = pFileName;<span class="comment">//书中代码没有这一句，打开的结果是TOC面板里面没有文件的名字，故而自己添上了这一句</span></div><div class="line"></div><div class="line">    mainMapControl.Map.AddLayer(pCadLayer);</div><div class="line">    mainMapControl.ActiveView.Refresh();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="加载个人地理数据库"><a href="#加载个人地理数据库" class="headerlink" title="加载个人地理数据库"></a>加载个人地理数据库</h1><p>个人地理数据库（Personal Geodatabase）使用 Micorosoft Access 文件（*.mdb）进行空间数据的存储与管理，它将不同的数据同一纳入 Access 文件中，便于数据的管理与迁移，容量限制为2GB。个人地理数据库支持单用户编辑，不支持版本管理。<br><strong>实例程序实现思路：</strong></p>
<ul>
<li>(1) 创建 AccessWorkspaceFactory 类的实例； </li>
<li>(2) 用 IWorkspaceFactory 接口的 OpenFromFile 方法打开 *.mdb 数据集的工作空间，对工作空间里面的数据进行加载。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddPersonGDB_Click</span><span class="params">(object sender, EventArgs e)</span></span></div><div class="line">&#123;</div><div class="line">    IWorkspaceFactory pAccessWorkspaceFactory;</div><div class="line"></div><div class="line">    OpenFileDialog pOpenFileDialog = <span class="keyword">new</span> OpenFileDialog();</div><div class="line">    pOpenFileDialog.Filter = <span class="string">"Personal Geodatabase(*.mdb)|*.mdb"</span>;</div><div class="line">    pOpenFileDialog.Title = <span class="string">"打开PersonGeodatabase文件"</span>;</div><div class="line">    pOpenFileDialog.ShowDialog();</div><div class="line"></div><div class="line">    string pFullPath = pOpenFileDialog.FileName;</div><div class="line">    <span class="keyword">if</span> (pFullPath == <span class="string">""</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    pAccessWorkspaceFactory = <span class="keyword">new</span> AccessWorkspaceFactory(); <span class="comment">//using ESRI.ArcGIS.DataSourcesGDB;</span></div><div class="line">    <span class="comment">//获取工作空间</span></div><div class="line">    IWorkspace pWorkspace = pAccessWorkspaceFactory.OpenFromFile(pFullPath, <span class="number">0</span>);</div><div class="line"></div><div class="line">    ClearAllData();    <span class="comment">//新增删除数据</span></div><div class="line"></div><div class="line">    <span class="comment">//加载工作空间里的数据</span></div><div class="line">    AddAllDataset(pWorkspace, mainMapControl);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>这里对加载工作空间中数据的方法进行了封装，自定义了 AddAllDataset 函数，以便对其他空间数据库（文件地理数据库、ArcSDE 空间数据库）加载时可直接调用。</li>
<li>以上代码主要介绍矢量和栅格数据的加载（其实不止这两种数据格式，加载其他类型的数据也是采用相同的方法，只是采用不同的工作空间而已）。</li>
<li>自定义函数 AddAllDataset 核心代码如下:</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/// &lt;summary&gt;</span></div><div class="line"><span class="comment">/// 加载工作空间里面的要素和栅格数据</span></div><div class="line"><span class="comment">/// &lt;/summary&gt;</span></div><div class="line"><span class="comment">/// &lt;param name="pWorkspace"&gt;&lt;/param&gt;</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddAllDataset</span><span class="params">(IWorkspace pWorkspace, AxMapControl mapControl)</span></span></div><div class="line">&#123;</div><div class="line">    IEnumDataset pEnumDataset = pWorkspace.get_Datasets(ESRI.ArcGIS.Geodatabase.esriDatasetType.esriDTAny);</div><div class="line">    pEnumDataset.Reset();</div><div class="line">    <span class="comment">//将Enum数据集中的数据一个个读到DataSet中</span></div><div class="line">    IDataset pDataset = pEnumDataset.Next();</div><div class="line">    <span class="comment">//判断数据集是否有数据</span></div><div class="line">    <span class="keyword">while</span> (pDataset != <span class="keyword">null</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (pDataset is IFeatureDataset)  <span class="comment">//要素数据集</span></div><div class="line">        &#123;</div><div class="line">            IFeatureWorkspace pFeatureWorkspace = (IFeatureWorkspace)pWorkspace;</div><div class="line">            IFeatureDataset pFeatureDataset = pFeatureWorkspace.OpenFeatureDataset(pDataset.Name);</div><div class="line">            IEnumDataset pEnumDataset1 = pFeatureDataset.Subsets;</div><div class="line">            pEnumDataset1.Reset();</div><div class="line">            IGroupLayer pGroupLayer = <span class="keyword">new</span> GroupLayerClass();</div><div class="line">            pGroupLayer.Name = pFeatureDataset.Name;</div><div class="line">            IDataset pDataset1 = pEnumDataset1.Next();</div><div class="line">            <span class="keyword">while</span> (pDataset1 != <span class="keyword">null</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">if</span> (pDataset1 is IFeatureClass)  <span class="comment">//要素类</span></div><div class="line">                &#123;</div><div class="line">                    IFeatureLayer pFeatureLayer = <span class="keyword">new</span> FeatureLayerClass();</div><div class="line">                    pFeatureLayer.FeatureClass = pFeatureWorkspace.OpenFeatureClass(pDataset1.Name);</div><div class="line">                    <span class="keyword">if</span> (pFeatureLayer.FeatureClass != <span class="keyword">null</span>)</div><div class="line">                    &#123;</div><div class="line">                        pFeatureLayer.Name = pFeatureLayer.FeatureClass.AliasName;</div><div class="line">                        pGroupLayer.Add(pFeatureLayer);</div><div class="line">                        mapControl.Map.AddLayer(pFeatureLayer);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                pDataset1 = pEnumDataset1.Next();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pDataset is IFeatureClass) <span class="comment">//要素类</span></div><div class="line">        &#123;</div><div class="line">            IFeatureWorkspace pFeatureWorkspace = (IFeatureWorkspace)pWorkspace;</div><div class="line">            IFeatureLayer pFeatureLayer = <span class="keyword">new</span> FeatureLayerClass();</div><div class="line">            pFeatureLayer.FeatureClass = pFeatureWorkspace.OpenFeatureClass(pDataset.Name);</div><div class="line"></div><div class="line">            pFeatureLayer.Name = pFeatureLayer.FeatureClass.AliasName;</div><div class="line">            mapControl.Map.AddLayer(pFeatureLayer);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (pDataset is IRasterDataset) <span class="comment">//栅格数据集</span></div><div class="line">        &#123;</div><div class="line">            IRasterWorkspaceEx pRasterWorkspace = (IRasterWorkspaceEx)pWorkspace;</div><div class="line">            IRasterDataset pRasterDataset = pRasterWorkspace.OpenRasterDataset(pDataset.Name);</div><div class="line">            <span class="comment">//影像金字塔判断与创建</span></div><div class="line">            IRasterPyramid3 pRasPyrmid;</div><div class="line">            pRasPyrmid = pRasterDataset as IRasterPyramid3;</div><div class="line">            <span class="keyword">if</span> (pRasPyrmid != <span class="keyword">null</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">if</span> (!(pRasPyrmid.Present))</div><div class="line">                &#123;</div><div class="line">                    pRasPyrmid.Create(); <span class="comment">//创建金字塔</span></div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            IRasterLayer pRasterLayer = <span class="keyword">new</span> RasterLayerClass();</div><div class="line">            pRasterLayer.CreateFromDataset(pRasterDataset);</div><div class="line">            ILayer pLayer = pRasterLayer as ILayer;</div><div class="line">            mapControl.AddLayer(pLayer, <span class="number">0</span>);</div><div class="line">        &#125;</div><div class="line">        pDataset = pEnumDataset.Next();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    mapControl.ActiveView.Refresh();</div><div class="line">    <span class="comment">//同步鹰眼</span></div><div class="line">    SynchronizeEagleEye();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="加载文件地理数据库数据"><a href="#加载文件地理数据库数据" class="headerlink" title="加载文件地理数据库数据"></a>加载文件地理数据库数据</h1><p>文件地理数据库（File Geodatabase）是以文件夹形式存储各种类型的 GIS 数据集，可以存储、查询和管理空间数据和非空间数据，支持的地理数据库的大小最大为 1 TB。文件地理数据库支持单用户编辑，不支持版本管理。<br><strong>实例程序实现思路：</strong></p>
<ul>
<li>(1) 由于文件地理数据库是以文件夹的形式存在的，因此可以使用 FolderBrowserDialog 选择文件夹进行加载。首先创建 FileGDBWorkspaceFactoryClass 类的实例； </li>
<li>(2) 用 IWorkspaceFactory 接口的 OpenFromFile 方法打开文件地理数据库的工作空间，对工作空间里面的数据进行加载。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">#region 加载文件地理数据库数据</div><div class="line">private void AddFileDatabase_Click(object sender, EventArgs e)</div><div class="line">&#123;</div><div class="line">    IWorkspaceFactory pFileGDBWorkspaceFactory;</div><div class="line"></div><div class="line">    FolderBrowserDialog dlg = new FolderBrowserDialog();</div><div class="line">    if (dlg.ShowDialog() != DialogResult.OK) return;</div><div class="line">    string pFullPath = dlg.SelectedPath;</div><div class="line"></div><div class="line">    if (pFullPath == "")</div><div class="line">    &#123;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    pFileGDBWorkspaceFactory = new FileGDBWorkspaceFactoryClass(); //using ESRI.ArcGIS.DataSourcesGDB;</div><div class="line"></div><div class="line">    ClearAllData();    //新增删除数据</div><div class="line"></div><div class="line">    //获取工作空间</div><div class="line">    IWorkspace pWorkspace = pFileGDBWorkspaceFactory.OpenFromFile(pFullPath, 0);</div><div class="line">    AddAllDataset(pWorkspace, mainMapControl);</div><div class="line">&#125;</div><div class="line">#endregion</div></pre></td></tr></table></figure>
<h1 id="加载-ArcSDE-空间数据库数据"><a href="#加载-ArcSDE-空间数据库数据" class="headerlink" title="加载 ArcSDE 空间数据库数据"></a>加载 ArcSDE 空间数据库数据</h1><p>ArcSDE（Spatial Database Engine，空间搜索引擎）是在现有的关系型数据库上进行的空间扩展，它使空间数据能保存在关系数据库中（如 Oracle、SQLServer等）。ArcSDE 空间数据库的一个重要特点是支持多用户并发操作，并且可以通过版本来表现空间数据编辑的状态。</p>
<blockquote>
<p>ArcSDE 的组成：</p>
<ol>
<li><strong>ArcSDE 服务器管理进程</strong>负责维护 ArcSDE 和监听来自客户端的连接请求。ArcSDE 启动就是启动 ArcSDE 服务器管理进程，利用管理员账户管理 ArcSDE 与 RDBMS 的连接，处理客户端的连接请求。</li>
<li><strong>专用服务器进程</strong>由 ArcSDE 服务器管理进程穿件，用于每一个特定的客户端应用程序与数据库的连接。</li>
<li><strong>ArcSDE 客户端</strong>通过 ArcSDE 服务器管理进程和专用服务器进程建立和 RDBMS 的连接，实现对数据库的操作。</li>
</ol>
<p>ArcSDE 提供了应用服务器连接和直接连接两种连接方式。当服务器性能较好时可采用应用服务器连接，否则采用直接连接。为了减轻服务器的压力，建议采用直接连接的方式进行连接。</p>
<p>两种连接方式的异同：直接连接就是通过 ArcSDE 访问数据表，并在本地完成对数据的各种操作（如空间分析、编辑等）；而应用服务器连接就是通过 ArcSDE 访问数据表后，在服务器端完成对数据的各种操作，再把操作结果返回客户端。</p>
</blockquote>
<p><strong>实例程序实现思路：</strong></p>
<ul>
<li>(1) 创建 SDEWorksapceFactoryClass 类的实例； </li>
<li>(2) 通过 SDE 连接的连接属性打开 SDE 数据库的工作空间，对工作空间里面的数据进行加载。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"># 这里以基于 Oracle 11g 的 ArcSDE 10.0 连接为例对两种连接方式进行说明。</div><div class="line">#region 加载 ArcSDE 数据库</div><div class="line">/// &lt;summary&gt;</div><div class="line">/// 服务器连接</div><div class="line">/// &lt;/summary&gt;</div><div class="line">/// &lt;param name="sender"&gt;&lt;/param&gt;</div><div class="line">/// &lt;param name="e"&gt;&lt;/param&gt;</div><div class="line">private void AddSDEByService_Click(object sender, EventArgs e)</div><div class="line">&#123;</div><div class="line">    IWorkspace pWorkspace;</div><div class="line">    pWorkspace = arcSDEWorkspaceOpen("192.168.70.110", "esri_sde", "sde", "sde", "", "SDE.DEFAULT");</div><div class="line"></div><div class="line">    //如果工作空间不为空则进行加载</div><div class="line">    if (pWorkspace != null)</div><div class="line">    &#123;</div><div class="line">        AddAllDataset(pWorkspace, mainMapControl);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/// &lt;summary&gt;</div><div class="line">/// 直连</div><div class="line">/// &lt;/summary&gt;</div><div class="line">/// &lt;param name="sender"&gt;&lt;/param&gt;</div><div class="line">/// &lt;param name="e"&gt;&lt;/param&gt;</div><div class="line">private void AddSDEByDirect_Click(object sender, EventArgs e)</div><div class="line">&#123;</div><div class="line">    IWorkspace pWorkspace;</div><div class="line"></div><div class="line">    //如果工作空间不为空则进行加载</div><div class="line">    if (pWorkspace != null)</div><div class="line">    &#123;</div><div class="line">        AddAllDataset(pWorkspace, mainMapControl);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/// &lt;summary&gt;</div><div class="line">/// 通过SDE连接打开SDE数据库</div><div class="line">/// &lt;/summary&gt;</div><div class="line">/// &lt;param name="server"&gt;服务器IP&lt;/param&gt;</div><div class="line">/// &lt;param name="instance"&gt;数据库实例，应用服务器连接为：5151或esri_sde，直连为sde:oracle11g:orcl(orcl为服务名)&lt;/param&gt;</div><div class="line">/// &lt;param name="user"&gt;SDE用户名&lt;/param&gt;</div><div class="line">/// &lt;param name="password"&gt;用户密码&lt;/param&gt;</div><div class="line">/// &lt;param name="database"&gt;数据库&lt;/param&gt;</div><div class="line">/// &lt;param name="version"&gt;SDE版本，缺省为"SDE.DEFAULT"&lt;/param&gt;</div><div class="line">/// &lt;returns&gt;&lt;/returns&gt;</div><div class="line">private IWorkspace arcSDEWorkspaceOpen(string server, string instance, string user, string password, string database, string version)</div><div class="line">&#123;</div><div class="line">    IWorkspace pWorkSpace = null;</div><div class="line">    //创建和实例化数据集</div><div class="line">    IPropertySet pPropertySet = new PropertySetClass();</div><div class="line">    pPropertySet.SetProperty("SERVER", server);</div><div class="line">    pPropertySet.SetProperty("INSTANCE", instance);</div><div class="line">    pPropertySet.SetProperty("USER", user);</div><div class="line">    pPropertySet.SetProperty("PASSWORD", password);</div><div class="line">    pPropertySet.SetProperty("DATABASE", database);</div><div class="line">    pPropertySet.SetProperty("VERSION", version);</div><div class="line">    IWorkspaceFactory2 pWorkspaceFactory = new SdeWorkspaceFactoryClass();</div><div class="line"></div><div class="line">    try</div><div class="line">    &#123;</div><div class="line">        pWorkSpace = pWorkspaceFactory.Open(pPropertySet, 0);</div><div class="line">    &#125;</div><div class="line">    catch (Exception ex)</div><div class="line">    &#123;</div><div class="line">        MessageBox.Show(ex.Message);</div><div class="line">    &#125;</div><div class="line">    return pWorkSpace;</div><div class="line">&#125;</div><div class="line">#endregion</div></pre></td></tr></table></figure>
<h1 id="加载文本文件数据"><a href="#加载文本文件数据" class="headerlink" title="加载文本文件数据"></a>加载文本文件数据</h1><p>野外测量的数据通常为含有 X、Y 坐标的 Excel 文件或者文本文件。<br><strong>实例程序实现思路：</strong></p>
<ul>
<li>(1) 根据 Excel 或者 *.txt 文件等获取点的坐标信息； </li>
<li>(2) 根据点的坐标创建 Shapefile 图层；</li>
<li>(3) 加载该 Shapefile 图层。</li>
</ul>
<h2 id="坐标信息的提取"><a href="#坐标信息的提取" class="headerlink" title="坐标信息的提取"></a>坐标信息的提取</h2><ul>
<li>(1) 创建一个点结构，进行点信息的存储。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">struct CPoint</div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> string Name;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">double</span> X;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">double</span> Y;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>(2) 创建并实例化一个 CPoint 类型的数组，将所有的点信息进行存储。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">List&lt;string&gt; pColumns = <span class="keyword">new</span> List&lt;string&gt;();</div><div class="line"><span class="function"><span class="keyword">private</span> List&lt;CPoint&gt; <span class="title">GetPoints</span><span class="params">(string surveyDataFullName)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">        List&lt;CPoint&gt; pList = <span class="keyword">new</span> List&lt;CPoint&gt;();</div><div class="line">        <span class="keyword">char</span>[] charArray = <span class="keyword">new</span> <span class="keyword">char</span>[] &#123; <span class="string">','</span>, <span class="string">' '</span>, <span class="string">'\t'</span> &#125;;   <span class="comment">//常用的分隔符为逗号、空格、制表符</span></div><div class="line">        <span class="comment">//文本信息读取</span></div><div class="line">        FileStream fs = <span class="keyword">new</span> FileStream(surveyDataFullName, FileMode.Open);</div><div class="line">        StreamReader sr = <span class="keyword">new</span> StreamReader(fs, Encoding.Default);</div><div class="line">        string strLine = sr.ReadLine();</div><div class="line">        <span class="keyword">if</span> (strLine != <span class="keyword">null</span>)</div><div class="line">        &#123;</div><div class="line">            string[] strArray = strLine.Split(charArray);</div><div class="line">            <span class="keyword">if</span> (strArray.Length &gt; <span class="number">0</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; strArray.Length; i++)</div><div class="line">                &#123;</div><div class="line">                    pColumns.Add(strArray[i]);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">while</span> ((strLine= sr.ReadLine())!=<span class="keyword">null</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="comment">//点信息的读取</span></div><div class="line">                strArray = strLine.Split(charArray);</div><div class="line">                CPoint pCPoint = <span class="keyword">new</span> CPoint();</div><div class="line">                pCPoint.Name = strArray[<span class="number">0</span>].Trim();</div><div class="line">                pCPoint.X = Convert.ToDouble(strArray[<span class="number">1</span>]);</div><div class="line">                pCPoint.Y = Convert.ToDouble(strArray[<span class="number">2</span>]);</div><div class="line">            </div><div class="line">                pList.Add(pCPoint);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">        sr.Close();</div><div class="line">        <span class="keyword">return</span> pList;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception ex)</div><div class="line">    &#123;</div><div class="line">        MessageBox.Show(ex.Message);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="根据点坐标创建-Shapefile-图层"><a href="#根据点坐标创建-Shapefile-图层" class="headerlink" title="根据点坐标创建 Shapefile 图层"></a>根据点坐标创建 Shapefile 图层</h2><ul>
<li>(1) 创建表的工作空间，通过 IFields、IFieldsEdit、IField 等接口创建属性字段，添加到要素集中。</li>
<li>(2) 根据获得的点坐标信息为属性字段赋值，进而得到图层的要素集。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> IFeatureLayer <span class="title">CreateShpFromPoints</span><span class="params">(List&lt;CPoint&gt; cPointList, string filePath)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> index = filePath.LastIndexOf(<span class="string">'\\'</span>);</div><div class="line">    string folder = filePath.Substring(<span class="number">0</span>, index);<span class="comment">//路径切分得到文件夹名</span></div><div class="line">    string shapeName = filePath.Substring(index + <span class="number">1</span>);  <span class="comment">//路径切分得到文件名</span></div><div class="line">    IWorkspaceFactory pWSF = <span class="keyword">new</span> ShapefileWorkspaceFactoryClass();</div><div class="line">    IFeatureWorkspace pFWS = (IFeatureWorkspace)pWSF.OpenFromFile(folder, <span class="number">0</span>);</div><div class="line"></div><div class="line">    IFields pFields = <span class="keyword">new</span> FieldsClass();</div><div class="line">    IFieldsEdit pFieldsEdit;</div><div class="line">    pFieldsEdit = (IFieldsEdit)pFields;</div><div class="line"></div><div class="line">    IField pField = <span class="keyword">new</span> FieldClass();</div><div class="line">    IFieldEdit pFieldEdit = (IFieldEdit)pField;</div><div class="line">    pFieldEdit.Name_2 = <span class="string">"Shape"</span>;</div><div class="line">    pFieldEdit.Type_2 = esriFieldType.esriFieldTypeGeometry;</div><div class="line">    IGeometryDef pGeometryDef = <span class="keyword">new</span> GeometryDefClass();</div><div class="line">    IGeometryDefEdit pGDefEdit = (IGeometryDefEdit)pGeometryDef;</div><div class="line">    pGDefEdit.GeometryType_2 = esriGeometryType.esriGeometryPoint;</div><div class="line">    <span class="comment">//定义坐标系</span></div><div class="line">    ISpatialReferenceFactory pSRF = <span class="keyword">new</span> SpatialReferenceEnvironmentClass();</div><div class="line">    ISpatialReference pSpatialReference = pSRF.CreateGeographicCoordinateSystem((<span class="keyword">int</span>)esriSRGeoCSType.esriSRGeoCS_Beijing1954);</div><div class="line">    pGDefEdit.SpatialReference_2 = pSpatialReference;</div><div class="line"></div><div class="line">    pFieldEdit.GeometryDef_2 = pGeometryDef;</div><div class="line">    pFieldsEdit.AddField(pField);</div><div class="line">    </div><div class="line">    IFeatureClass pFeatureClass;</div><div class="line">    pFeatureClass = pFWS.CreateFeatureClass(shapeName, pFields, <span class="keyword">null</span>, <span class="keyword">null</span>, esriFeatureType.esriFTSimple, <span class="string">"Shape"</span>, <span class="string">""</span>);</div><div class="line"></div><div class="line">    IPoint pPoint = <span class="keyword">new</span> PointClass();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cPointList.Count; j++)</div><div class="line">    &#123;</div><div class="line">        pPoint.X = cPointList[j].X;</div><div class="line">        pPoint.Y = cPointList[j].Y;</div><div class="line"></div><div class="line">        IFeature pFeature = pFeatureClass.CreateFeature();</div><div class="line">        pFeature.Shape = pPoint;</div><div class="line">        pFeature.Store();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    IFeatureLayer pFeatureLayer = <span class="keyword">new</span> FeatureLayerClass();</div><div class="line">    pFeatureLayer.Name = shapeName;</div><div class="line">    pFeatureLayer.FeatureClass = pFeatureClass;</div><div class="line">    <span class="keyword">return</span> pFeatureLayer;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Shapefile-图层的加载"><a href="#Shapefile-图层的加载" class="headerlink" title="Shapefile 图层的加载"></a>Shapefile 图层的加载</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnCreate_Click</span><span class="params">(object sender, EventArgs e)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (ValidateTxtbox())</div><div class="line">    &#123;</div><div class="line">        List&lt;CPoint&gt; pCPointList = GetPoints(txtSource.Text);</div><div class="line">        <span class="keyword">if</span> (pCPointList == <span class="keyword">null</span>)</div><div class="line">        &#123;</div><div class="line">            MessageBox.Show(<span class="string">"所选文件为空，请重新选择！"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            IFeatureLayer pFeatureLayer = CreateShpFromPoints(pCPointList, txtSave.Text);</div><div class="line">            buddyMap.Map.AddLayer(pFeatureLayer);</div><div class="line">            <span class="keyword">this</span>.Close();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h1><p>根据上述 ArcGIS Engine 加载几种常用的数据源的方法，可以看出 ArcGIS Engine 加载空间数据一般具有以下五个步骤：</p>
<blockquote>
<ol>
<li>创建数据对应的工作空间工厂（WorkspaceFactory）；</li>
<li>使用 WorkspaceFactory 创建要加载数据的工作空间（Workspace）;</li>
<li>使用 Workspace 打开并得到图层的数据集 DataSet ;</li>
<li>将 DataSet 赋值给新建图层的数据源；</li>
<li>添加图层到 MapControl。</li>
</ol>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p id=&quot;div-border-top-green&quot;&gt;数据加载是 ArcGIS Engine 中最基础的操作，AE 支持的数据广泛，包含矢量数据、栅格数据、CAD 数据、Excel数据等等，这些数据的加载有助于我们使用 AE 做进一步的数据处理与分析。&lt;br&gt;
    
    </summary>
    
      <category term="ArcGIS" scheme="http://yoursite.com/categories/ArcGIS/"/>
    
    
      <category term="ArcGIS" scheme="http://yoursite.com/tags/ArcGIS/"/>
    
      <category term="AE" scheme="http://yoursite.com/tags/AE/"/>
    
  </entry>
  
</feed>
